{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import'./App.css';import SearchBar from'./components/SearchBar';import RouteList from'./components/RouteList';import VehicleMap from'./components/VehicleMap';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[routes,setRoutes]=useState([]);const[searchTerm,setSearchTerm]=useState('');const[filteredRoutes,setFilteredRoutes]=useState([]);const[vehicles,setVehicles]=useState([]);useEffect(()=>{// Fetch route data from the backend\naxios.get('api/routes').then(response=>{setRoutes(response.data);setFilteredRoutes(response.data);// Initialize filtered routes\n}).catch(error=>console.error('Error fetching routes:',error));},[]);// Handle search\nconst handleSearch=e=>{const term=e.target.value;setSearchTerm(term);// Filter routes based on the search term\nconst filtered=routes.filter(route=>route.lineNumber.includes(term)||route.name.toLowerCase().includes(term.toLowerCase()));setFilteredRoutes(filtered);};const fetchVehicles=routeID=>{axios.post('api/vehicles',{routeID}).then(response=>{setVehicles(response.data.data.list);// Access the list of vehicles from response.data.data.list\n}).catch(error=>{console.error('Error fetching vehicles:',error);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SearchBar,{searchTerm:searchTerm,handleSearch:handleSearch}),/*#__PURE__*/_jsx(RouteList,{filteredRoutes:filteredRoutes,fetchVehicles:fetchVehicles}),/*#__PURE__*/_jsx(VehicleMap,{vehicles:vehicles})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","axios","SearchBar","RouteList","VehicleMap","jsx","_jsx","jsxs","_jsxs","App","routes","setRoutes","searchTerm","setSearchTerm","filteredRoutes","setFilteredRoutes","vehicles","setVehicles","get","then","response","data","catch","error","console","handleSearch","e","term","target","value","filtered","filter","route","lineNumber","includes","name","toLowerCase","fetchVehicles","routeID","post","list","children"],"sources":["C:/Users/ernho/Desktop/React-Node/reactfrontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport RouteList from './components/RouteList';\nimport VehicleMap from './components/VehicleMap';\n\nfunction App() {\n  const [routes, setRoutes] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredRoutes, setFilteredRoutes] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  useEffect(() => {\n    // Fetch route data from the backend\n    axios.get('api/routes')\n      .then((response) => {\n        setRoutes(response.data);\n        setFilteredRoutes(response.data); // Initialize filtered routes\n      })\n      .catch((error) => console.error('Error fetching routes:', error));\n  }, []);\n\n  // Handle search\n  const handleSearch = (e) => {\n    const term = e.target.value;\n    setSearchTerm(term);\n\n    // Filter routes based on the search term\n    const filtered = routes.filter((route) =>\n      route.lineNumber.includes(term) || route.name.toLowerCase().includes(term.toLowerCase())\n    );\n    setFilteredRoutes(filtered);\n  };\n\n  const fetchVehicles = (routeID) => {\n    axios.post('api/vehicles', { routeID })\n      .then((response) => {\n        setVehicles(response.data.data.list); // Access the list of vehicles from response.data.data.list\n      })\n      .catch((error) => {\n        console.error('Error fetching vehicles:', error);\n      });\n  };\n\n  return (\n    <div>\n      <SearchBar searchTerm={searchTerm} handleSearch={handleSearch} />\n      <RouteList filteredRoutes={filteredRoutes} fetchVehicles={fetchVehicles} />\n      <VehicleMap vehicles={vehicles} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,WAAW,CAClB,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACc,cAAc,CAAEC,iBAAiB,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACd;AACAE,KAAK,CAACiB,GAAG,CAAC,YAAY,CAAC,CACpBC,IAAI,CAAEC,QAAQ,EAAK,CAClBT,SAAS,CAACS,QAAQ,CAACC,IAAI,CAAC,CACxBN,iBAAiB,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAE;AACpC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAAC,CACrE,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAE,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAAC,IAAI,CAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAC3BhB,aAAa,CAACc,IAAI,CAAC,CAEnB;AACA,KAAM,CAAAG,QAAQ,CAAGpB,MAAM,CAACqB,MAAM,CAAEC,KAAK,EACnCA,KAAK,CAACC,UAAU,CAACC,QAAQ,CAACP,IAAI,CAAC,EAAIK,KAAK,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC,CAACF,QAAQ,CAACP,IAAI,CAACS,WAAW,CAAC,CAAC,CACzF,CAAC,CACDrB,iBAAiB,CAACe,QAAQ,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAO,aAAa,CAAIC,OAAO,EAAK,CACjCrC,KAAK,CAACsC,IAAI,CAAC,cAAc,CAAE,CAAED,OAAQ,CAAC,CAAC,CACpCnB,IAAI,CAAEC,QAAQ,EAAK,CAClBH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAACA,IAAI,CAACmB,IAAI,CAAC,CAAE;AACxC,CAAC,CAAC,CACDlB,KAAK,CAAEC,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CAAC,CAAC,CACN,CAAC,CAED,mBACEf,KAAA,QAAAiC,QAAA,eACEnC,IAAA,CAACJ,SAAS,EAACU,UAAU,CAAEA,UAAW,CAACa,YAAY,CAAEA,YAAa,CAAE,CAAC,cACjEnB,IAAA,CAACH,SAAS,EAACW,cAAc,CAAEA,cAAe,CAACuB,aAAa,CAAEA,aAAc,CAAE,CAAC,cAC3E/B,IAAA,CAACF,UAAU,EAACY,QAAQ,CAAEA,QAAS,CAAE,CAAC,EAC/B,CAAC,CAEV,CAEA,cAAe,CAAAP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}